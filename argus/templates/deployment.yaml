apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ .Values.service.name }}
  namespace: kube-monitoring
  labels:
    chart: "argus"
spec:
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        app: {{ .Values.service.name }}
    spec:
      serviceAccountName: argus
      containers:
      - name: argus
        image: "{{ .Values.argus.image.repository }}:{{ .Values.argus.image.tag }}"
        imagePullPolicy: {{ .Values.argus.image.pullPolicy }}
        args:
          - watch
        env:
        - name: WATCHER_ID
          valueFrom:
            secretKeyRef:
              name: {{ required "A valid .Values.argus.secretName entry is required!" .Values.argus.secretName }}
              key: api_id
        - name: WATCHER_KEY
          valueFrom:
            secretKeyRef:
              name: {{ required "A valid .Values.argus.secretName entry is required!" .Values.argus.secretName }}
              key: api_key
        - name: WATCHER_COMPANY
          valueFrom:
            secretKeyRef:
              name: {{ required "A valid .Values.argus.secretName entry is required!" .Values.argus.secretName }}
              key: company
        - name: WATCHER_COMPANY
          valueFrom:
            secretKeyRef:
              name: {{ required "A valid .Values.argus.secretName entry is required!" .Values.argus.secretName }}
              key: company
        - name: WATCHER_CLUSTER_NAME
          value: "{{ required "A valid .Values.argus.clusterName entry is required!" .Values.argus.clusterName }}"
        - name: WATCHER_DISABLE_ALERTING
          value: "{{ required "A valid .Values.argus.disable_alerting entry is required!" .Values.argus.disableAlerting }}"
        - name: WATCHER_DELETE_DEVICES
          value: "{{ required "A valid .Values.argus.disable_alerting entry is required!" .Values.argus.deleteDevices }}"
        - name: WATCHER_DEBUG
          value: "{{ .Values.argus.debug }}"
        - name: WATCHER_PREFERRED_COLLECTOR
          value: "{{ required "A valid .Values.collector.id entry is required!" .Values.collector.id }}"
      - name: collector
        image: "{{ .Values.collector.image.repository }}:{{ .Values.collector.image.tag }}"
        imagePullPolicy: {{ .Values.collector.image.pullPolicy }}
        env:
        - name: company
          valueFrom:
            secretKeyRef:
              name: {{ required "A valid .Values.argus.secretName entry is required!" .Values.argus.secretName }}
              key: company
        - name: username
          valueFrom:
            secretKeyRef:
              name: {{ required "A valid .Values.argus.secretName entry is required!" .Values.argus.secretName }}
              key: username
        - name: password
          valueFrom:
            secretKeyRef:
              name: {{ required "A valid .Values.argus.secretName entry is required!" .Values.argus.secretName }}
              key: password
        - name: collector_id
          value: {{ required "A valid .Values.collector.id entry is required!" .Values.collector.id | quote }}
        - name: cleanup
          value: "false"
